# Generated by Django 5.1.2 on 2024-10-28 18:02

import colorfield.fields
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [('store', '0003_alter_testimonial_reviewer_location'), ('store', '0004_alter_siteconfig_base_font_and_more'), ('store', '0005_alter_product_name'), ('store', '0006_alter_siteconfig_color_action_and_more'), ('store', '0007_product_product_we_love'), ('store', '0008_innavatoruser_palette'), ('store', '0009_alter_innavatoruser_snowflake_id'), ('store', '0010_alter_innavatoruser_snowflake_id'), ('store', '0011_alter_innavatoruser_snowflake_id'), ('store', '0012_alter_innavatoruser_snowflake_id'), ('store', '0013_innavatoruser_profile_picture_url'), ('store', '0014_role_groupmembership_innavatorgroup_and_more'), ('store', '0015_remove_commissionrequest_message_contents_and_more')]

    dependencies = [
        ('store', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='testimonial',
            name='reviewer_location',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='siteconfig',
            name='base_font',
            field=models.CharField(default='Tahoma', help_text="Any valid <a href='https://fonts.google.com/' target='_blank'>Google Font name</a>. Dynamically loaded at runtime.", max_length=100),
        ),
        migrations.AlterField(
            model_name='siteconfig',
            name='site_name_font',
            field=models.CharField(default='Pacifico', help_text="Any valid <a href='https://fonts.google.com/' target='_blank'>Google Font name</a>. Dynamically loaded at runtime.", max_length=100),
        ),
        migrations.AlterField(
            model_name='product',
            name='name',
            field=models.CharField(max_length=64, unique=True),
        ),
        migrations.AlterField(
            model_name='siteconfig',
            name='color_action',
            field=colorfield.fields.ColorField(default='#00AFAF', help_text='Fill for buttons', image_field=None, max_length=25, samples=None),
        ),
        migrations.AlterField(
            model_name='siteconfig',
            name='color_action_text',
            field=colorfield.fields.ColorField(default='#000000', help_text='Text for buttons', image_field=None, max_length=25, samples=None),
        ),
        migrations.AlterField(
            model_name='siteconfig',
            name='color_primary',
            field=colorfield.fields.ColorField(default='#C200C2', help_text='For the site banner gradient', image_field=None, max_length=25, samples=None),
        ),
        migrations.AlterField(
            model_name='siteconfig',
            name='color_secondary',
            field=colorfield.fields.ColorField(default='#BE0000', help_text='For headings', image_field=None, max_length=25, samples=None),
        ),
        migrations.AlterField(
            model_name='siteconfig',
            name='site_name_color',
            field=colorfield.fields.ColorField(default='#0D8645', image_field=None, max_length=25, samples=None),
        ),
        migrations.AddField(
            model_name='product',
            name='product_we_love',
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name='InnavatorUser',
            fields=[
                ('snowflake_id', models.BigIntegerField(primary_key=True, serialize=False, unique=True, verbose_name='Snowflake ID')),
                ('full_name', models.CharField(blank=True, max_length=300, verbose_name='Full Name')),
                ('preferred_name', models.CharField(blank=True, max_length=150, verbose_name='Preferred Name')),
                ('major', models.CharField(blank=True, max_length=100, verbose_name='Major')),
                ('website_url', models.URLField(blank=True, max_length=300, validators=[django.core.validators.URLValidator()], verbose_name='Website URL')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('profile_picture_url', models.URLField(blank=True, max_length=300, validators=[django.core.validators.URLValidator()], verbose_name='Profile Picture URL')),
            ],
        ),
        migrations.CreateModel(
            name='Palette',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='store.innavatoruser')),
                ('gradient1', models.CharField(default='#000000 #000000', max_length=15, validators=[django.core.validators.RegexValidator(regex='^#[0-9a-fA-F]{6} #[0-9a-fA-F]{6}$')], verbose_name='First Gradient')),
                ('gradient2', models.CharField(default='#000000 #000000', max_length=15, validators=[django.core.validators.RegexValidator(regex='^#[0-9a-fA-F]{6} #[0-9a-fA-F]{6}$')], verbose_name='Second Gradient')),
                ('gradient3', models.CharField(default='#000000 #000000', max_length=15, validators=[django.core.validators.RegexValidator(regex='^#[0-9a-fA-F]{6} #[0-9a-fA-F]{6}$')], verbose_name='Third Gradient')),
                ('gradient4', models.CharField(default='#000000 #000000', max_length=15, validators=[django.core.validators.RegexValidator(regex='^#[0-9a-fA-F]{6} #[0-9a-fA-F]{6}$')], verbose_name='Fourth Gradient')),
                ('gradient5', models.CharField(default='#000000 #000000', max_length=15, validators=[django.core.validators.RegexValidator(regex='^#[0-9a-fA-F]{6} #[0-9a-fA-F]{6}$')], verbose_name='Fifth Gradient')),
                ('gradient6', models.CharField(default='#000000 #000000', max_length=15, validators=[django.core.validators.RegexValidator(regex='^#[0-9a-fA-F]{6} #[0-9a-fA-F]{6}$')], verbose_name='Sixth Gradient')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('snowflake_id', models.BigIntegerField(primary_key=True, serialize=False, unique=True, verbose_name='Snowflake ID')),
                ('name', models.CharField(max_length=100, verbose_name='Role')),
            ],
        ),
        migrations.CreateModel(
            name='GroupMembership',
            fields=[
                ('snowflake_id', models.BigIntegerField(primary_key=True, serialize=False, unique=True, verbose_name='Snowflake ID')),
                ('is_privileged', models.BooleanField(default=False, verbose_name='Is Privileged')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.innavatoruser')),
            ],
        ),
        migrations.CreateModel(
            name='InnavatorGroup',
            fields=[
                ('snowflake_id', models.BigIntegerField(primary_key=True, serialize=False, unique=True, verbose_name='Snowflake ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('is_club', models.BooleanField(default=False, verbose_name='Is Club')),
                ('members', models.ManyToManyField(related_name='%(app_label)s_%(class)s_members', through='store.GroupMembership', to='store.innavatoruser')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_owner', to='store.innavatoruser')),
            ],
        ),
        migrations.AddField(
            model_name='groupmembership',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.innavatorgroup'),
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('snowflake_id', models.BigIntegerField(primary_key=True, serialize=False, unique=True, verbose_name='Snowflake ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.CharField(blank=True, max_length=300, verbose_name='Description')),
                ('start_time', models.DateTimeField(verbose_name='Start Timestamp')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.innavatorgroup')),
            ],
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('snowflake_id', models.BigIntegerField(primary_key=True, serialize=False, unique=True, verbose_name='Snowflake ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.innavatorgroup')),
            ],
        ),
        migrations.CreateModel(
            name='Mentorship',
            fields=[
                ('snowflake_id', models.BigIntegerField(primary_key=True, serialize=False, unique=True, verbose_name='Snowflake ID')),
                ('mentee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_mentee', to='store.innavatoruser')),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_mentor', to='store.innavatoruser')),
            ],
        ),
        migrations.AddField(
            model_name='innavatoruser',
            name='mentors',
            field=models.ManyToManyField(through='store.Mentorship', to='store.innavatoruser'),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('snowflake_id', models.BigIntegerField(primary_key=True, serialize=False, unique=True, verbose_name='Snowflake ID')),
                ('contents', models.CharField(max_length=2000, verbose_name='Contents')),
                ('is_edited', models.BooleanField(default=False, verbose_name='Is Edited')),
                ('last_revision', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Last Revision')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.channel')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.innavatoruser')),
            ],
        ),
        migrations.CreateModel(
            name='PortfolioEntry',
            fields=[
                ('snowflake_id', models.BigIntegerField(primary_key=True, serialize=False, unique=True, verbose_name='Snowflake ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.CharField(blank=True, max_length=300, verbose_name='Description')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.innavatorgroup')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('snowflake_id', models.BigIntegerField(primary_key=True, serialize=False, unique=True, verbose_name='Snowflake ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.CharField(blank=True, max_length=300, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.innavatorgroup')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectRoleNeed',
            fields=[
                ('snowflake_id', models.BigIntegerField(primary_key=True, serialize=False, unique=True, verbose_name='Snowflake ID')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.project')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.role')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectRole',
            fields=[
                ('snowflake_id', models.BigIntegerField(primary_key=True, serialize=False, unique=True, verbose_name='Snowflake ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.innavatoruser')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.role')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='looking_for_roles',
            field=models.ManyToManyField(through='store.ProjectRoleNeed', to='store.role'),
        ),
        migrations.CreateModel(
            name='CommissionRequest',
            fields=[
                ('snowflake_id', models.BigIntegerField(primary_key=True, serialize=False, unique=True, verbose_name='Snowflake ID')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.innavatoruser')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.role')),
                ('description', models.CharField(blank=True, max_length=300, verbose_name='Description')),
                ('name', models.CharField(default='', max_length=100, verbose_name='Name')),
            ],
        ),
    ]
